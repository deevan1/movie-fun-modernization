buildscript {
    ext {
        springBootVersion = "2.0.6.RELEASE"
        springVersion = "5.0.10.RELEASE"
        hibernateVersion = "5.2.17.Final"
        slf4jVersion = "1.7.25"
        springCloudVersion = "Finchley.SR2"
        springCloudSsoVersion = "2.1.3.RELEASE"
        springSecurityOAuthAutoconfigVersion = "2.1.0.RELEASE"
        springCloudServicesClientLibrariesVersion = "2.0.2.RELEASE"
        junitVersion = "4.12"
        mysqlVersion = "8.0.16"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

repositories {
    mavenCentral()
}

apply plugin: "java"

sourceCompatibility = 1.8
targetCompatibility = 1.8

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

task dependenciesGraphDot {

    mustRunAfter "dclean"

    def graphBuildDir = "build/dependenciesGraph"
    def dotFile = file "$graphBuildDir/graph.dot"

    doLast {
        delete graphBuildDir
        mkdir graphBuildDir

        dotFile << "digraph dependencies {\n"

        project.subprojects.forEach { Project subProject ->
            try {

                Configuration compileConfig = subProject.configurations["compile"]

                compileConfig
                        .dependencies
                        .grep { it.respondsTo("getDependencyProject") }
                        .forEach { dotFile << """  "$subProject.name" -> "$it.dependencyProject.name"\n""" }
            } catch (UnknownConfigurationException ignored) {
            }
        }
        dotFile << "}\n"
    }
}

task dependenciesGraph(dependsOn: "dependenciesGraphDot", type: Exec) {
    workingDir "$project.buildDir/dependenciesGraph"
    commandLine "dot", "-O", "-Tpng", "graph.dot"
}

task dclean(type: Delete) {
    delete "build"
}